name: Auto-Documentation Update

on:
  schedule:
    # Run every hour
    - cron: '0 * * * *'
  workflow_dispatch:  # Manual trigger
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.txt'

jobs:
  update-documentation:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for diffing
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        pip install gitpython
        
    - name: Install package in development mode
      run: |
        pip install -e . || echo "Package installation failed, continuing..."
        
    - name: Run Documentation Agent
      run: |
        echo "Running documentation update agent..."
        python expert-doc-writer.py --once
        
    - name: Check for documentation changes
      id: check-changes
      run: |
        if git diff --name-only HEAD~1 | grep -E "docs/" > /dev/null; then
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "Documentation changes detected"
        else
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "No documentation changes"
        fi
        
    - name: Commit and push documentation updates
      if: steps.check-changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "Auto-update docs via GitHub Actions" || echo "No changes to commit"
        git push origin main || echo "Push failed or no changes"
        
    - name: Summary
      run: |
        echo "=== Documentation Update Summary ==="
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Commit: ${{ github.sha }}"
        echo "Changes detected: ${{ steps.check-changes.outputs.changes }}"
        echo "================================"
